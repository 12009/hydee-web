<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hydee.hdsec.dao.CompanyAccountRechargeDao">
  <!-- 配置二级缓存 -->
  <!-- <cache type="com.hydee.hdsec.RedisCache" /> -->
  <resultMap id="BaseResultMap" type="companyAccountRecharge">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="bank_card" jdbcType="VARCHAR" property="bankCard" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="amount" jdbcType="VARCHAR" property="amount" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="serial_number" jdbcType="VARCHAR" property="serialNumber" />
    <result column="dict_id" jdbcType="BIGINT" property="dictId" />
    <result column="customer_id" jdbcType="VARCHAR" property="customerId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_id" jdbcType="BIGINT" property="createId" />
    <result column="transfer_proof" property="transferProof" jdbcType="VARCHAR" />
  </resultMap>
  <!-- selectListPage的返回 -->
  <resultMap id="BaseResultMap2" type="companyAccountRecharge">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="bank_card" jdbcType="VARCHAR" property="bankCard" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="amount" jdbcType="VARCHAR" property="amount" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="serial_number" jdbcType="VARCHAR" property="serialNumber" />
    <result column="dict_id" jdbcType="BIGINT" property="dictId" />
    <result column="customer_id" jdbcType="VARCHAR" property="customerId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_id" jdbcType="BIGINT" property="createId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="org_name" jdbcType="VARCHAR" property="orgName" />
    <result column="dict_name" jdbcType="VARCHAR" property="dictName" />
    <result column="transfer_proof" property="transferProof" jdbcType="VARCHAR" />
  </resultMap>
  
  
  
  <sql id="Base_Column_List">
    id, account_name, bank_card, bank_name, amount, phone, serial_number, dict_id, customer_id, 
    status, remark, create_time, create_id, transfer_proof
  </sql>
  
  
  
   <select id="selectListPage" resultMap="BaseResultMap2" parameterType="companyAccountRecharge" >
    
    SELECT
	recharge.id, recharge.account_name, recharge.bank_card, recharge.bank_name, recharge.amount, recharge.phone, recharge.serial_number, recharge.dict_id, recharge.customer_id, 
    recharge.status, recharge.remark, recharge.create_time, recharge.create_id,recharge.transfer_proof,`user`.user_name,organization.org_name,dict.dict_name
	FROM
	ct_company_account_recharge AS recharge
	INNER JOIN ct_company_organization AS organization ON recharge.customer_id = organization.customer_id
	INNER JOIN ct_company_user AS `user` ON recharge.create_id = `user`.id
	INNER JOIN ct_company_dict AS dict ON recharge.dict_id = dict.dict_id
	WHERE
       1=1 
      <if test="pName != null and pName!=''">
       and (organization.org_name LIKE '%${pName}%' or `user`.user_name LIKE '%${pName}%')
      </if>
      <if test="pStartTime != null and pStartTime!='' and pEndTime != null and pEndTime != '' ">
       and (recharge.create_time<![CDATA[>=]]> '${pStartTime}' and recharge.create_time<![CDATA[<]]>'${pEndTime}')
   
      </if>
      <if test="status != null and status != -1 ">
       and recharge.status =  #{status,jdbcType=INTEGER}
      </if>
      <if test="createId != null">
       and recharge.create_id =  #{createId,jdbcType=BIGINT}
      </if>
      <if test="serialNumber != null and serialNumber!=''">
       and (recharge.serial_number LIKE '%${serialNumber}%')
      </if>
  	order by recharge.create_time desc
  </select>
  
 
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ct_company_account_recharge
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="getSerialNumber" resultType="string">
    select GetSerialNumber('DD')
  </select>
  
  <select id="selectBySerialNumber" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ct_company_account_recharge
    where serial_number = #{serialNumber,jdbcType=VARCHAR}
  </select>
  
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ct_company_account_recharge
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="companyAccountRecharge">
    insert into ct_company_account_recharge (id, account_name, bank_card, 
      bank_name, amount, phone, 
      serial_number, dict_id, customer_id, 
      status, remark, create_time, 
      create_id, transfer_proof)
    values (#{id,jdbcType=BIGINT}, #{accountName,jdbcType=VARCHAR}, #{bankCard,jdbcType=VARCHAR}, 
      #{bankName,jdbcType=VARCHAR}, #{amount,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{serialNumber,jdbcType=VARCHAR}, #{dictId,jdbcType=BIGINT}, #{customerId,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createId,jdbcType=BIGINT}, #{transferProof,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="companyAccountRecharge">
    insert into ct_company_account_recharge
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="bankCard != null">
        bank_card,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="serialNumber != null">
        serial_number,
      </if>
      <if test="dictId != null">
        dict_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="transferProof != null" >
        transfer_proof,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="bankCard != null">
        #{bankCard,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="serialNumber != null">
        #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="dictId != null">
        #{dictId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=BIGINT},
      </if>
      <if test="transferProof != null" >
        #{transferProof,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="companyAccountRecharge">
    update ct_company_account_recharge
    <set>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="bankCard != null">
        bank_card = #{bankCard,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="serialNumber != null">
        serial_number = #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="dictId != null">
        dict_id = #{dictId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=BIGINT},
      </if>
      <if test="transferProof != null" >
        transfer_proof = #{transferProof,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateBySerialNumberSelective" parameterType="companyAccountRecharge">
    update ct_company_account_recharge
    <set>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="bankCard != null">
        bank_card = #{bankCard,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="dictId != null">
        dict_id = #{dictId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=BIGINT},
      </if>
      <if test="transferProof != null" >
        transfer_proof = #{transferProof,jdbcType=VARCHAR},
      </if>
    </set>
    where  serial_number = #{serialNumber,jdbcType=VARCHAR}
  </update>
  
  
  <update id="updateByPrimaryKey" parameterType="companyAccountRecharge">
    update ct_company_account_recharge
    set account_name = #{accountName,jdbcType=VARCHAR},
      bank_card = #{bankCard,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      serial_number = #{serialNumber,jdbcType=VARCHAR},
      dict_id = #{dictId,jdbcType=BIGINT},
      customer_id = #{customerId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
   
</mapper>