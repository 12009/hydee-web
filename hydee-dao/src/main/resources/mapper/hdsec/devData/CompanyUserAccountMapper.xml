<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hydee.hdsec.dao.CompanyUserAccountDao" >
  <!-- 配置二级缓存 -->
  <!-- <cache type="com.hydee.hdsec.RedisCache" /> -->
  <resultMap id="CompanyUserAccountMap" type="companyUserAccount" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="customer_id" property="customerId" jdbcType="VARCHAR" />
    <result column="balance" property="balance" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, user_id, customer_id, balance, create_time
  </sql>
  
  <select id="selectUserAccount" resultMap="CompanyUserAccountMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ct_company_user_account
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectUserAccountByUidAndCid" resultMap="CompanyUserAccountMap" parameterType="companyUserAccount" >
  	select 
    <include refid="Base_Column_List" />
    from ct_company_user_account
    where user_id = #{userId} and customer_id = #{customerId}
  </select>
  
  <delete id="deleteUserAccount" parameterType="java.lang.Long" >
    delete from ct_company_user_account
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insertUserAccount" parameterType="companyUserAccount" >
    insert into ct_company_user_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="balance != null" >
        balance,
      </if>
        create_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DOUBLE},
      </if>
      sysdate()
    </trim>
  </insert>
  
  <update id="updateUserAccount" parameterType="companyUserAccount" >
    update ct_company_user_account
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="takeoutBalance" parameterType="companyUserAccount">
  	update ct_company_user_account set balance = (balance - #{balance})
  	<where>
  		1 = 1
  		<if test="id != null"> and id = #{id} </if>
  		<if test="userId != null"> and user_id = #{userId} </if>
  		<if test="customerId != null"> and customer_id = #{customerId} </if>
  	</where>
  </update>
  
  <update id="takeoutBalanceBatch" parameterType="List">
  	<foreach collection="list" item="item" separator=";">
  		update ct_company_user_account set balance = (balance - #{item.balance})
	  	<where>
	  		1 = 1
	  		<if test="item.id != null"> and id = #{item.id} </if>
	  		<if test="item.userId != null"> and user_id = #{item.userId} </if>
	  		<if test="item.customerId != null"> and customer_id = #{item.customerId} </if>
	  	</where>
  	</foreach>
  </update>
</mapper>