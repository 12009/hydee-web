<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xsi:schemaLocation="http://www.springframework.org/schema/beans  
  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
  http://www.springframework.org/schema/context  
  http://www.springframework.org/schema/context/spring-context-3.1.xsd  
  http://www.springframework.org/schema/mvc  
  http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
  
  <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
  <!-- Spring容器优先加载由ServletContextListener（对应spring-mybatis.xml）产生的父容器，而SpringMVC（对应spring-mvc.xml）产生的是子容器。
  	        子容器Controller进行扫描装配时装配的@Service注解的实例是没有经过事务加强处理，即没有事务处理能力的Service，而父容器进行初始化的Service
  	        是保证事务的增强处理能力的。如果不在子容器中将Service exclude掉，此时得到的将是原样的无事务处理能力的Service。 
  	        所以使用 <context:component-scan base-package="com.hydee" />对事物管理将无效 -->
  <context:component-scan base-package="com.hydee">
  	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />    
  </context:component-scan> 
  
  <!-- 默认的注解映射的支持 -->
  <mvc:annotation-driven /> 
  
  <!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理  -->
  <mvc:resources mapping="/download/**" location="/download/" />
  <mvc:resources mapping="/img/**" location="/img/" />
  <mvc:resources mapping="/image/**" location="/image/" />
  <mvc:resources mapping="/js/**" location="/js/" />
  <mvc:resources mapping="/css/**" location="/css/" />
  <mvc:resources mapping="/pages/**" location="/pages/" />
  <mvc:resources mapping="/ckeditor/**" location="/ckeditor/" />
  <mvc:resources mapping="**.html" location="/" />
  
  <!-- spring统一异常处理拦截器 -->
  <bean id="exceptionHandler" class="com.hydee.hdsec.common.exception.handler.SystemExceptionHandler"/>
  
  <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
  <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
    <property name="supportedMediaTypes">
      <list>
        <value>text/html;charset=UTF-8</value>
      </list>
    </property>
  </bean>
  
  <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
  <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
    <property name="messageConverters">
      <list>
        <ref bean="mappingJacksonHttpMessageConverter" />	<!-- JSON转换器 -->
      </list>
    </property>
  </bean>
  
  <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
    <property name="prefix" value="/WEB-INF/views/" />
    <property name="suffix" value=".jsp" />
  </bean>

  <!-- 图片上传的配置 -->
  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <!--1024*200即200k-->
    <property name="maxUploadSize" value="5120000" /><!-- 5M -->
    <!--resolveLazily属性启用是为了推迟文- 图片上传的配置 oadAction 中捕获文件大小异常-->
    <property name="resolveLazily" value="true"/>
  </bean>

</beans>